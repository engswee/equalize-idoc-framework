*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 13.02.2019 at 15:26:45
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZBC_V_IDOC_CFG..................................*
FORM GET_DATA_ZBC_V_IDOC_CFG.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZBC_IDOC_CFG WHERE
(VIM_WHERETAB) .
    CLEAR ZBC_V_IDOC_CFG .
ZBC_V_IDOC_CFG-MANDT =
ZBC_IDOC_CFG-MANDT .
ZBC_V_IDOC_CFG-DIRECT =
ZBC_IDOC_CFG-DIRECT .
ZBC_V_IDOC_CFG-PARNUM =
ZBC_IDOC_CFG-PARNUM .
ZBC_V_IDOC_CFG-PARTYP =
ZBC_IDOC_CFG-PARTYP .
ZBC_V_IDOC_CFG-PARFCT =
ZBC_IDOC_CFG-PARFCT .
ZBC_V_IDOC_CFG-MESTYP =
ZBC_IDOC_CFG-MESTYP .
ZBC_V_IDOC_CFG-MESCOD =
ZBC_IDOC_CFG-MESCOD .
ZBC_V_IDOC_CFG-MESFCT =
ZBC_IDOC_CFG-MESFCT .
    SELECT SINGLE * FROM ZBC_IDOC_OPTIONS WHERE
DIRECT = ZBC_IDOC_CFG-DIRECT AND
PARNUM = ZBC_IDOC_CFG-PARNUM AND
PARTYP = ZBC_IDOC_CFG-PARTYP AND
PARFCT = ZBC_IDOC_CFG-PARFCT AND
MESTYP = ZBC_IDOC_CFG-MESTYP AND
MESCOD = ZBC_IDOC_CFG-MESCOD AND
MESFCT = ZBC_IDOC_CFG-MESFCT .
    IF SY-SUBRC EQ 0.
ZBC_V_IDOC_CFG-MATNR_CONV =
ZBC_IDOC_OPTIONS-MATNR_CONV .
ZBC_V_IDOC_CFG-CUST_CONV =
ZBC_IDOC_OPTIONS-CUST_CONV .
ZBC_V_IDOC_CFG-UOM_CONV =
ZBC_IDOC_OPTIONS-UOM_CONV .
ZBC_V_IDOC_CFG-DUPE_CHECK =
ZBC_IDOC_OPTIONS-DUPE_CHECK .
    ENDIF.
<VIM_TOTAL_STRUC> = ZBC_V_IDOC_CFG.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZBC_V_IDOC_CFG .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZBC_V_IDOC_CFG.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZBC_V_IDOC_CFG-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZBC_IDOC_CFG WHERE
  DIRECT = ZBC_V_IDOC_CFG-DIRECT AND
  PARNUM = ZBC_V_IDOC_CFG-PARNUM AND
  PARTYP = ZBC_V_IDOC_CFG-PARTYP AND
  PARFCT = ZBC_V_IDOC_CFG-PARFCT AND
  MESTYP = ZBC_V_IDOC_CFG-MESTYP AND
  MESCOD = ZBC_V_IDOC_CFG-MESCOD AND
  MESFCT = ZBC_V_IDOC_CFG-MESFCT .
    IF SY-SUBRC = 0.
    DELETE ZBC_IDOC_CFG .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZBC_IDOC_OPTIONS WHERE
    DIRECT = ZBC_IDOC_CFG-DIRECT AND
    PARNUM = ZBC_IDOC_CFG-PARNUM AND
    PARTYP = ZBC_IDOC_CFG-PARTYP AND
    PARFCT = ZBC_IDOC_CFG-PARFCT AND
    MESTYP = ZBC_IDOC_CFG-MESTYP AND
    MESCOD = ZBC_IDOC_CFG-MESCOD AND
    MESFCT = ZBC_IDOC_CFG-MESFCT .
    IF SY-SUBRC = 0.
    DELETE ZBC_IDOC_OPTIONS .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZBC_IDOC_CFG WHERE
  DIRECT = ZBC_V_IDOC_CFG-DIRECT AND
  PARNUM = ZBC_V_IDOC_CFG-PARNUM AND
  PARTYP = ZBC_V_IDOC_CFG-PARTYP AND
  PARFCT = ZBC_V_IDOC_CFG-PARFCT AND
  MESTYP = ZBC_V_IDOC_CFG-MESTYP AND
  MESCOD = ZBC_V_IDOC_CFG-MESCOD AND
  MESFCT = ZBC_V_IDOC_CFG-MESFCT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZBC_IDOC_CFG.
    ENDIF.
ZBC_IDOC_CFG-MANDT =
ZBC_V_IDOC_CFG-MANDT .
ZBC_IDOC_CFG-DIRECT =
ZBC_V_IDOC_CFG-DIRECT .
ZBC_IDOC_CFG-PARNUM =
ZBC_V_IDOC_CFG-PARNUM .
ZBC_IDOC_CFG-PARTYP =
ZBC_V_IDOC_CFG-PARTYP .
ZBC_IDOC_CFG-PARFCT =
ZBC_V_IDOC_CFG-PARFCT .
ZBC_IDOC_CFG-MESTYP =
ZBC_V_IDOC_CFG-MESTYP .
ZBC_IDOC_CFG-MESCOD =
ZBC_V_IDOC_CFG-MESCOD .
ZBC_IDOC_CFG-MESFCT =
ZBC_V_IDOC_CFG-MESFCT .
    IF SY-SUBRC = 0.
    UPDATE ZBC_IDOC_CFG ##WARN_OK.
    ELSE.
    INSERT ZBC_IDOC_CFG .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZBC_IDOC_OPTIONS WHERE
    DIRECT = ZBC_IDOC_CFG-DIRECT AND
    PARNUM = ZBC_IDOC_CFG-PARNUM AND
    PARTYP = ZBC_IDOC_CFG-PARTYP AND
    PARFCT = ZBC_IDOC_CFG-PARFCT AND
    MESTYP = ZBC_IDOC_CFG-MESTYP AND
    MESCOD = ZBC_IDOC_CFG-MESCOD AND
    MESFCT = ZBC_IDOC_CFG-MESFCT .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZBC_IDOC_OPTIONS.
ZBC_IDOC_OPTIONS-DIRECT =
ZBC_IDOC_CFG-DIRECT .
ZBC_IDOC_OPTIONS-PARNUM =
ZBC_IDOC_CFG-PARNUM .
ZBC_IDOC_OPTIONS-PARTYP =
ZBC_IDOC_CFG-PARTYP .
ZBC_IDOC_OPTIONS-PARFCT =
ZBC_IDOC_CFG-PARFCT .
ZBC_IDOC_OPTIONS-MESTYP =
ZBC_IDOC_CFG-MESTYP .
ZBC_IDOC_OPTIONS-MESCOD =
ZBC_IDOC_CFG-MESCOD .
ZBC_IDOC_OPTIONS-MESFCT =
ZBC_IDOC_CFG-MESFCT .
      ENDIF.
ZBC_IDOC_OPTIONS-MATNR_CONV =
ZBC_V_IDOC_CFG-MATNR_CONV .
ZBC_IDOC_OPTIONS-CUST_CONV =
ZBC_V_IDOC_CFG-CUST_CONV .
ZBC_IDOC_OPTIONS-UOM_CONV =
ZBC_V_IDOC_CFG-UOM_CONV .
ZBC_IDOC_OPTIONS-DUPE_CHECK =
ZBC_V_IDOC_CFG-DUPE_CHECK .
    IF SY-SUBRC = 0.
    UPDATE ZBC_IDOC_OPTIONS ##WARN_OK.
    ELSE.
    INSERT ZBC_IDOC_OPTIONS .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZBC_V_IDOC_CFG-UPD_FLAG,
STATUS_ZBC_V_IDOC_CFG-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZBC_V_IDOC_CFG.
  SELECT SINGLE * FROM ZBC_IDOC_CFG WHERE
DIRECT = ZBC_V_IDOC_CFG-DIRECT AND
PARNUM = ZBC_V_IDOC_CFG-PARNUM AND
PARTYP = ZBC_V_IDOC_CFG-PARTYP AND
PARFCT = ZBC_V_IDOC_CFG-PARFCT AND
MESTYP = ZBC_V_IDOC_CFG-MESTYP AND
MESCOD = ZBC_V_IDOC_CFG-MESCOD AND
MESFCT = ZBC_V_IDOC_CFG-MESFCT .
ZBC_V_IDOC_CFG-MANDT =
ZBC_IDOC_CFG-MANDT .
ZBC_V_IDOC_CFG-DIRECT =
ZBC_IDOC_CFG-DIRECT .
ZBC_V_IDOC_CFG-PARNUM =
ZBC_IDOC_CFG-PARNUM .
ZBC_V_IDOC_CFG-PARTYP =
ZBC_IDOC_CFG-PARTYP .
ZBC_V_IDOC_CFG-PARFCT =
ZBC_IDOC_CFG-PARFCT .
ZBC_V_IDOC_CFG-MESTYP =
ZBC_IDOC_CFG-MESTYP .
ZBC_V_IDOC_CFG-MESCOD =
ZBC_IDOC_CFG-MESCOD .
ZBC_V_IDOC_CFG-MESFCT =
ZBC_IDOC_CFG-MESFCT .
    SELECT SINGLE * FROM ZBC_IDOC_OPTIONS WHERE
DIRECT = ZBC_IDOC_CFG-DIRECT AND
PARNUM = ZBC_IDOC_CFG-PARNUM AND
PARTYP = ZBC_IDOC_CFG-PARTYP AND
PARFCT = ZBC_IDOC_CFG-PARFCT AND
MESTYP = ZBC_IDOC_CFG-MESTYP AND
MESCOD = ZBC_IDOC_CFG-MESCOD AND
MESFCT = ZBC_IDOC_CFG-MESFCT .
    IF SY-SUBRC EQ 0.
ZBC_V_IDOC_CFG-MATNR_CONV =
ZBC_IDOC_OPTIONS-MATNR_CONV .
ZBC_V_IDOC_CFG-CUST_CONV =
ZBC_IDOC_OPTIONS-CUST_CONV .
ZBC_V_IDOC_CFG-UOM_CONV =
ZBC_IDOC_OPTIONS-UOM_CONV .
ZBC_V_IDOC_CFG-DUPE_CHECK =
ZBC_IDOC_OPTIONS-DUPE_CHECK .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZBC_V_IDOC_CFG-MATNR_CONV .
      CLEAR ZBC_V_IDOC_CFG-CUST_CONV .
      CLEAR ZBC_V_IDOC_CFG-UOM_CONV .
      CLEAR ZBC_V_IDOC_CFG-DUPE_CHECK .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZBC_V_IDOC_CFG USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZBC_V_IDOC_CFG-DIRECT TO
ZBC_IDOC_CFG-DIRECT .
MOVE ZBC_V_IDOC_CFG-PARNUM TO
ZBC_IDOC_CFG-PARNUM .
MOVE ZBC_V_IDOC_CFG-PARTYP TO
ZBC_IDOC_CFG-PARTYP .
MOVE ZBC_V_IDOC_CFG-PARFCT TO
ZBC_IDOC_CFG-PARFCT .
MOVE ZBC_V_IDOC_CFG-MESTYP TO
ZBC_IDOC_CFG-MESTYP .
MOVE ZBC_V_IDOC_CFG-MESCOD TO
ZBC_IDOC_CFG-MESCOD .
MOVE ZBC_V_IDOC_CFG-MESFCT TO
ZBC_IDOC_CFG-MESFCT .
MOVE ZBC_V_IDOC_CFG-MANDT TO
ZBC_IDOC_CFG-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZBC_IDOC_CFG'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZBC_IDOC_CFG TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZBC_IDOC_CFG'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZBC_IDOC_CFG-DIRECT TO
ZBC_IDOC_OPTIONS-DIRECT .
MOVE ZBC_IDOC_CFG-PARNUM TO
ZBC_IDOC_OPTIONS-PARNUM .
MOVE ZBC_IDOC_CFG-PARTYP TO
ZBC_IDOC_OPTIONS-PARTYP .
MOVE ZBC_IDOC_CFG-PARFCT TO
ZBC_IDOC_OPTIONS-PARFCT .
MOVE ZBC_IDOC_CFG-MESTYP TO
ZBC_IDOC_OPTIONS-MESTYP .
MOVE ZBC_IDOC_CFG-MESCOD TO
ZBC_IDOC_OPTIONS-MESCOD .
MOVE ZBC_IDOC_CFG-MESFCT TO
ZBC_IDOC_OPTIONS-MESFCT .
MOVE ZBC_V_IDOC_CFG-MANDT TO
ZBC_IDOC_OPTIONS-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZBC_IDOC_OPTIONS'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZBC_IDOC_OPTIONS TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZBC_IDOC_OPTIONS'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
